version: '3.8'

services:
  app: # Frontend
    image: todo-frontend
    restart: always
    build:
      context: ./todo-frontend/ # The context will pick todo-frontend directory as the "build context"
      dockerfile: ./Dockerfile # From todo-frontend
    container_name: todo-frontend
  mongo: # Mongo for backend
    image: mongo
    container_name: mongo
    restart: always
    build:
      context: ./todo-backend/
      dockerfile: ./Dockerfile
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/mongo_data/db
  redis: # Redis for backend
    image: redis
    container_name: redis
    restart: always
    build:
      context: ./todo-backend/
      dockerfile: ./Dockerfile
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data
  server: # Backend server
    image: todo-server
    container_name: todo-server
    restart: always
    build:
      context: ./todo-backend/
      dockerfile: ./Dockerfile
    volumes: 
      - ./todo-backend/:/usr/src/app
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started
      - server # wait for the backend server to be started